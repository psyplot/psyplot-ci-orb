version: 2.1
orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.0
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  <orb-name>: {}
# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/
# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
jobs:
  # Define one or more jobs which will utilize your orb's commands and parameters to validate your changes.
  integration-test-configure:
    machine: true
    steps:
      - attach_workspace:
          at: "~"
      - psyplot-ci-orb/configure-conda
      - psyplot-ci-orb/install-opengl
  deploy-python:
    machine: true
    steps:
      - checkout
      - run:
          command: git fetch --tags origin
      - psyplot-ci-orb/install-conda
      - psyplot-ci-orb/configure-conda
      - run:
          name: Build python package
          command: |
            which conda || eval "$("${HOME}"/miniconda3/bin/conda shell.bash hook)"
            pip install .
            python setup.py sdist
      - run:
          name: Check python tag
          command: |
            which conda || eval "$("${HOME}"/miniconda3/bin/conda shell.bash hook)"
            VERSION=`deploy-conda-recipe -V`
            TAG=`git describe`
            if [ "${TAG:1}" == "${VERSION}" ]; then
              # make sure the version is in the deploy-pkg.yml and configure-conda.yml
              [ "$(grep ${VERSION} src/commands/deploy-pkg.yml)" != "" ]
              [ "$(grep ${VERSION} src/commands/configure-conda.yml)" != "" ]
            fi
      - run:
          name: deploy python package
          command: |-
            which conda || eval "$("${HOME}"/miniconda3/bin/conda shell.bash hook)"
            anaconda upload dist/psyplot-ci-orb*.tar.gz
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - command-test:
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: <namespace>/<orb-name>
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - command-test
          context: <publishing-context>
          filters: *release-filters
executors:
  default:
    machine: true
  macos-executor:
    macos:
      xcode: 12.2.0
